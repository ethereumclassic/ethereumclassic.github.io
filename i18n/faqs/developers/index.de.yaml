title: FAQs für Entwickler
seo: Häufig gestellte Fragen für alle, die zu Ethereum Classic beitragen oder Anwendungen auf Ethereum Classic entwickeln möchten.
info: 'Sie können hier keine Antwort auf Ihre Frage finden? Versuchen Sie, Ihre Frage auf dem ETC Community [discord](https://ethereumclassic.org/discord) Server zu stellen. Insbesondere der ETC Discord-Channel "#dev-general" könnte für Sie von Interesse sein.'
description: Möchten Sie lernen, wie man eine Anwendung oder ein Protokoll auf Ethereum Classic aufbaut? Diese Seite ist für Sie.
items:
  questions:
    items:
      types:
        question: Welche Art von Anwendungen kann ich auf ETC aufbauen?
        answer: |
          Da ETC den Turing-kompletten EVM verwendet, kann jede Art von Smart-Contract-System auf ETC bereitgestellt werden; von Multisigs über DeFi bis hin zu NFTs, wohin auch immer Ihre Träume Sie führen. Jede Anwendung, die auf Ethereum eingesetzt werden kann, kann auch auf Ethereum Classic eingesetzt werden.

          Einige andere Chains haben in der Vergangenheit bestimmte Anwendungen und Transaktionen zensiert. Wenn Sie also sicherstellen wollen, dass Ihre Anwendung genau so läuft, wie sie programmiert wurde, ohne Ausfallzeiten, Zensur oder Einmischung Dritter, dann sollten Sie die Bereitstellung auf Ethereum Classic in Betracht ziehen!

          Einige Beispiele für Anwendungen, die auf Ethereum Classic bereitgestellt wurden, finden Sie im Abschnitt [apps](/services/apps).
      eth:
        question: Was ist der Unterschied zwischen ETH und ETC beim Schreiben von Anwendungen?
        answer: |
          Beim Schreiben von Verträgen gibt es keine Unterschiede; Sie können dieselben Entwickler-Tools und Programmiersprachen (insbesondere Solidity) wie bei Ethereum verwenden.

          Der Hauptunterschied zu Ethereum besteht darin, dass ETC ein anderes App-Ökosystem hat, sodass die bestehenden Verträge, mit denen Sie direkt interagieren können, anders sind. Wenn Sie sich in ein bestehendes Asset auf Ethereum einklinken müssen, können Sie ein ummanteltes Asset verwenden, [Cross-Chain-Brücken](/services/apps/interoperability), oder Sie können sogar in Betracht ziehen, Ihre eigene Version dieser Assets einzusetzen.
      development:
        question: Wie kann ich Anwendungen für Ethereum Classic entwickeln?
        answer: |
          Im Abschnitt [Entwicklungsanleitungen](/guides/development) sowie im Abschnitt [development](/development) finden Sie Anleitungen und Tools, die Ihnen bei der Bereitstellung von Classic helfen.
      deployment:
        question: Wie kann ich auf der Ethereum Classic-Blockchain bereitstellen?
        answer: |
          Erwerben Sie zunächst einige ETC, um das Gas für die Bereitstellung Ihres Vertrags zu bezahlen, und stellen Sie dann einfach sicher, dass Sie den Vertrag im Ethereum Classic-Netzwerk (Chain ID 61) und nicht im Ethereum-Netzwerk (Chain ID 1) bereitstellen.
      rpc:
        question: Gibt es öffentliche RPC-Endpunkte, die ich für die Bereitstellung auf ETC verwenden kann?
        answer: |
          Ja. Wenn Sie Ihren eigenen Ethereum Classic-Knoten nicht synchronisieren möchten, gibt es eine Reihe von öffentlichen Endpunkten, die Sie kostenlos nutzen können.

          Sehen Sie sich den Abschnitt [RPC Endpoints](/network/endpoints) an, sowie [ChainList.org](https://chainlist.org/chain/61).
      grants:
        question: Kann ich eine Finanzierung erhalten, um auf Ethereum Classic aufzubauen?
        answer: |
          Da Ethereum Classic über keine zentrale Kasse verfügt, muss die gesamte Entwicklung entweder selbst oder über Drittmittel finanziert werden. In der Vergangenheit haben verschiedene Drittparteien Förderprogramme durchgeführt, und die [ETC Cooperative] (https://etccooperative.org/) hat angekündigt, dass sie bald ein neues Förderprogramm starten wird.
      ecips:
        question: Wie kann ich bei der Entwicklung des Ethereum Classic-Protokolls helfen?
        answer: |
          Sie können Vorschläge für Protokoll-Upgrades über den Prozess [ECIP](/development/ecips) einreichen. Sie können bei der Pflege von Client-Codebasen helfen, indem Sie die GitHub-Repositories der [clients](/development/clients) besuchen, bei denen Sie helfen möchten.
